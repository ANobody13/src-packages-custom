Common subdirectories: dwl-0.4/.git and dwl-custom/.git
Common subdirectories: dwl-0.4/.github and dwl-custom/.github
diff -N1p dwl-0.4/config.def.h dwl-custom/config.def.h
*** dwl-0.4/config.def.h	2023-10-09 09:24:27.000000000 -0400
--- dwl-custom/config.def.h	2023-10-09 12:17:05.467400530 -0400
***************
*** 1,6 ****
  /* Taken from https://github.com/djpohly/dwl/issues/466 */
! #define COLOR(hex)    { ((hex >> 24) & 0xFF) / 255.0f, \
!                         ((hex >> 16) & 0xFF) / 255.0f, \
!                         ((hex >> 8) & 0xFF) / 255.0f, \
!                         (hex & 0xFF) / 255.0f }
  /* appearance */
--- 1,6 ----
  /* Taken from https://github.com/djpohly/dwl/issues/466 */
! #define COLOR(hex)    { ((hex >> 24) & 0xFF) / 255.0f,	\
! 		((hex >> 16) & 0xFF) / 255.0f,					\
! 		((hex >> 8) & 0xFF) / 255.0f,					\
! 		(hex & 0xFF) / 255.0f }
  /* appearance */
*************** static const int sloppyfocus
*** 8,15 ****
  static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
! static const int smartgaps                 = 0;  /* 1 means no outer gap when there is only one window */
  static const int smartborders              = 1;
! static const unsigned int borderpx         = 1;  /* border pixel of windows */
! static const float bordercolor[]           = COLOR(0x808080ff);
! static const float focuscolor[]            = COLOR(0xff0000ff);
! static const unsigned int gappx           = 10; /* horiz inner gap between windows */
  /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
--- 8,15 ----
  static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
! static const int smartgaps                 = 1;  /* 1 means no outer gap when there is only one window */
  static const int smartborders              = 1;
! static const unsigned int borderpx         = 4;  /* border pixel of windows */
! static const float bordercolor[]           = COLOR(0x1f1d19aa);
! static const float focuscolor[]            = COLOR(0x523e77ee);
! static const unsigned int gappx           = 8; /* horiz inner gap between windows */
  /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
*************** static const float fullscreen_bg[]
*** 19,22 ****
  static const char *const autostart[] = {
!         "wbg", "/path/to/your/image", NULL,
!         NULL /* terminate */
  };
--- 19,26 ----
  static const char *const autostart[] = {
! 	"pipewire-launcher", NULL,
! 	"wbg", "/home/anobody/Pictures/Wallpapers/Vector\ City\ Night.jpg", NULL,
! 	"emacs", "--daemon", NULL,
! 	"dunst", NULL,
! 	"easyeffects", NULL,
! 	NULL /* terminate */
  };
*************** static const Rule rules[] = {
*** 30,35 ****
  	/* examples:
! 	{ "Gimp",     NULL,       0,            1,          0,      1,         -1 },
  	*/
! 	{ "firefox",  NULL,       1 << 8,       0,          0,      1,         -1 },
! 	{ "foot",     NULL,       0,            0,          1,      1,         -1 },
  };
--- 34,40 ----
  	/* examples:
! 	   { "Gimp",     NULL,       0,            1,          0,      1,         -1 },
  	*/
! 	{ "emacs",     NULL,       0,            0,          1,      1,         -1 },
! 	{ "easyeffects",     NULL,       1 << 8,            0,          0,      0,         -1 },
! 	{ "steam",     NULL,       0,            1,          0,      0,         -1 },
  };
*************** static const Layout layouts[] = {
*** 40,43 ****
  	{ "[]=",      tile },
- 	{ "><>",      NULL },    /* no layout function means floating behavior */
  	{ "[M]",      monocle },
  };
--- 45,48 ----
  	{ "[]=",      tile },
  	{ "[M]",      monocle },
+ 	{ "><>",      NULL },    /* no layout function means floating behavior */
  };
*************** static const MonitorRule monrules[] = {
*** 48,53 ****
  	/* example of a HiDPI laptop monitor:
! 	{ "eDP-1",    0.5,  1,      2,    &layouts[0], WL_OUTPUT_TRANSFORM_NORMAL,   -1,  -1 },
  	*/
  	/* defaults */
! 	{ NULL,       0.55, 1,      1,    &layouts[0], WL_OUTPUT_TRANSFORM_NORMAL,   -1,  -1 },
  };
--- 53,58 ----
  	/* example of a HiDPI laptop monitor:
! 	   { "eDP-1",    0.5,  1,      2,    &layouts[0], WL_OUTPUT_TRANSFORM_NORMAL,   -1,  -1 },
  	*/
  	/* defaults */
! 	{ NULL,       0.50, 1,      1,    &layouts[0], WL_OUTPUT_TRANSFORM_NORMAL,   -1,  -1 },
  };
*************** static const struct xkb_rule_names xkb_r
*** 58,61 ****
  	/* example:
! 	.options = "ctrl:nocaps",
  	*/
  	.options = NULL,
--- 63,68 ----
  	/* example:
! 	   .options = "ctrl:nocaps",
  	*/
+ 	.layout = "us",
+ 	.variant = "altgr-intl",
  	.options = NULL,
*************** static const int repeat_delay = 600;
*** 67,70 ****
  /* Trackpad */
! static const int tap_to_click = 1;
! static const int tap_and_drag = 1;
  static const int drag_lock = 1;
--- 74,77 ----
  /* Trackpad */
! static const int tap_to_click = 0;
! static const int tap_and_drag = 0;
  static const int drag_lock = 1;
*************** static const int middle_button_emulation
*** 75,87 ****
  /* You can choose between:
! LIBINPUT_CONFIG_SCROLL_NO_SCROLL
! LIBINPUT_CONFIG_SCROLL_2FG
! LIBINPUT_CONFIG_SCROLL_EDGE
! LIBINPUT_CONFIG_SCROLL_ON_BUTTON_DOWN
  */
! static const enum libinput_config_scroll_method scroll_method = LIBINPUT_CONFIG_SCROLL_2FG;
  
  /* You can choose between:
! LIBINPUT_CONFIG_CLICK_METHOD_NONE
! LIBINPUT_CONFIG_CLICK_METHOD_BUTTON_AREAS
! LIBINPUT_CONFIG_CLICK_METHOD_CLICKFINGER
  */
--- 82,94 ----
  /* You can choose between:
!    LIBINPUT_CONFIG_SCROLL_NO_SCROLL
!    LIBINPUT_CONFIG_SCROLL_2FG
!    LIBINPUT_CONFIG_SCROLL_EDGE
!    LIBINPUT_CONFIG_SCROLL_ON_BUTTON_DOWN
  */
! static const enum libinput_config_scroll_method scroll_method = LIBINPUT_CONFIG_SCROLL_EDGE;
  
  /* You can choose between:
!    LIBINPUT_CONFIG_CLICK_METHOD_NONE
!    LIBINPUT_CONFIG_CLICK_METHOD_BUTTON_AREAS
!    LIBINPUT_CONFIG_CLICK_METHOD_CLICKFINGER
  */
*************** static const enum libinput_config_click_
*** 90,100 ****
  /* You can choose between:
! LIBINPUT_CONFIG_SEND_EVENTS_ENABLED
! LIBINPUT_CONFIG_SEND_EVENTS_DISABLED
! LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE
  */
! static const uint32_t send_events_mode = LIBINPUT_CONFIG_SEND_EVENTS_ENABLED;
  
  /* You can choose between:
! LIBINPUT_CONFIG_ACCEL_PROFILE_FLAT
! LIBINPUT_CONFIG_ACCEL_PROFILE_ADAPTIVE
  */
--- 97,107 ----
  /* You can choose between:
!    LIBINPUT_CONFIG_SEND_EVENTS_ENABLED
!    LIBINPUT_CONFIG_SEND_EVENTS_DISABLED
!    LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE
  */
! static const uint32_t send_events_mode = LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE;
  
  /* You can choose between:
!    LIBINPUT_CONFIG_ACCEL_PROFILE_FLAT
!    LIBINPUT_CONFIG_ACCEL_PROFILE_ADAPTIVE
  */
*************** static const int cursor_timeout = 5;
*** 105,108 ****
  /* You can choose between:
! LIBINPUT_CONFIG_TAP_MAP_LRM -- 1/2/3 finger tap maps to left/right/middle
! LIBINPUT_CONFIG_TAP_MAP_LMR -- 1/2/3 finger tap maps to left/middle/right
  */
--- 112,115 ----
  /* You can choose between:
!    LIBINPUT_CONFIG_TAP_MAP_LRM -- 1/2/3 finger tap maps to left/right/middle
!    LIBINPUT_CONFIG_TAP_MAP_LMR -- 1/2/3 finger tap maps to left/middle/right
  */
*************** static const enum libinput_config_tap_bu
*** 111,115 ****
  /* If you want to use the windows key for MODKEY, use WLR_MODIFIER_LOGO */
! #define MODKEY WLR_MODIFIER_ALT
  
! #define TAGKEYS(KEY,SKEY,TAG) \
  	{ MODKEY,                    KEY,            view,            {.ui = 1 << TAG} }, \
--- 118,122 ----
  /* If you want to use the windows key for MODKEY, use WLR_MODIFIER_LOGO */
! #define MODKEY WLR_MODIFIER_LOGO
  
! #define TAGKEYS(KEY,SKEY,TAG)											\
  	{ MODKEY,                    KEY,            view,            {.ui = 1 << TAG} }, \
*************** static const enum libinput_config_tap_bu
*** 123,126 ****
  /* commands */
! static const char *termcmd[] = { "foot", NULL };
  static const char *menucmd[] = { "bemenu-run", NULL };
  
--- 130,139 ----
  /* commands */
! static const char *termcmd[] = { "emacsclient", "-c", "-a", "emacs", "--eval", "(+vterm/here nil)", NULL };
  static const char *menucmd[] = { "bemenu-run", NULL };
+ static const char *emacscmd[] = { "emacsclient", "-c", "-a", "emacs", NULL };
+ static const char *browsercmd[] = { "flatpak", "run", "io.gitlab.librewolf-community", NULL };
+ static const char *steamcmd[] = { "steam", NULL };
+ static const char *lockcmd[] = { "waylock", NULL };
+ static const char *logoutcmd[] = { "/bin/sh", "-c", "/home/anobody/Scripts/logout.sh", NULL };
+ static const char *printcmd[] = { "/bin/sh", "-c", "/home/anobody/Scripts/take_picture.sh", NULL };
  
*************** static const Key keys[] = {
*** 131,155 ****
  	/* modifier                  key                 function        argument */
! 	{ MODKEY,                    XKB_KEY_p,          spawn,          {.v = menucmd} },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Return,     spawn,          {.v = termcmd} },
! 	{ MODKEY,                    XKB_KEY_b,          togglebar,      {0}},
! 	{ MODKEY,                    XKB_KEY_j,          focusstack,     {.i = +1} },
! 	{ MODKEY,                    XKB_KEY_k,          focusstack,     {.i = -1} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_J,          movestack,      {.i = +1} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_K,          movestack,      {.i = -1} },
! 	{ MODKEY,                    XKB_KEY_i,          incnmaster,     {.i = +1} },
! 	{ MODKEY,                    XKB_KEY_d,          incnmaster,     {.i = -1} },
! 	{ MODKEY,                    XKB_KEY_h,          setmfact,       {.f = -0.05} },
! 	{ MODKEY,                    XKB_KEY_l,          setmfact,       {.f = +0.05} },
  	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
  	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
! 	{ MODKEY,                    XKB_KEY_g,          togglegaps,     {0} },
! 	{ MODKEY,                    XKB_KEY_a,          shiftview,      { .i = -1 } },
! 	{ MODKEY,                    XKB_KEY_semicolon,  shiftview,      { .i = 1 } },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          killclient,     {0} },
  	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
! 	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
! 	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
! 	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
! 	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
  	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
--- 144,174 ----
  	/* modifier                  key                 function        argument */
! 	{ MODKEY,                    XKB_KEY_r,          spawn,          {.v = menucmd} },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Return,     spawn,          {.v = termcmd} },
! 	{ MODKEY,            	     XKB_KEY_b,     spawn,          {.v = emacscmd} },
! 	{ MODKEY,		     XKB_KEY_w,          spawn,          {.v = browsercmd} },
! 	{ MODKEY,		     XKB_KEY_g,          spawn,          {.v = steamcmd} },
! 	{ MODKEY,		     XKB_KEY_End,        spawn,          {.v = lockcmd} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_End,        spawn,          {.v = logoutcmd} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Print,      spawn,          {.v = printcmd} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_b,          togglebar,      {0}},
! 	{ MODKEY,                    XKB_KEY_n,          focusstack,     {.i = +1} },
! 	{ MODKEY,                    XKB_KEY_e,          focusstack,     {.i = -1} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_N,          movestack,      {.i = +1} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_E,          movestack,      {.i = -1} },
! 	{ MODKEY,                    XKB_KEY_equal,          incnmaster,     {.i = +1} },
! 	{ MODKEY,                    XKB_KEY_minus,          incnmaster,     {.i = -1} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_m,          setmfact,       {.f = -0.05} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_i,          setmfact,       {.f = +0.05} },
  	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
  	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_g,          togglegaps,     {0} },
! 	{ MODKEY,                    XKB_KEY_bracketleft, shiftview,      { .i = -1 } },
! 	{ MODKEY,                    XKB_KEY_bracketright, shiftview,      { .i = 1 } },
  	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          killclient,     {0} },
  	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_f,          setlayout,      {.v = &layouts[2]} },
! 	{ MODKEY|WLR_MODIFIER_ALT,   XKB_KEY_h,          setlayout,      {.v = &layouts[2]} },
! 	{ MODKEY,                    XKB_KEY_h,          setlayout,      {0} },
! 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_f,         togglefloating, {0} },
! 	{ MODKEY,                    XKB_KEY_f,         togglefullscreen, {0} },
  	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
Common subdirectories: dwl-0.4/protocols and dwl-custom/protocols
